{
  "version": 3,
  "sources": ["../../@webreflection/custom-elements-attributes/esm/index.js", "../../@webreflection/custom-elements-upgrade/esm/index.js", "../../element-notifier/esm/index.js", "../../qsa-observer/esm/index.js", "../../@webreflection/custom-elements-builtin/esm/index.js"],
  "sourcesContent": ["export default (whenDefined, MutationObserver) => {\n\n  const attributeChanged = records => {\n    for (let i = 0, {length} = records; i < length; i++)\n      dispatch(records[i]);\n  };\n\n  const dispatch = ({target, attributeName, oldValue}) => {\n    target.attributeChangedCallback(\n      attributeName,\n      oldValue,\n      target.getAttribute(attributeName)\n    );\n  };\n\n  return (target, is) => {\n    const {observedAttributes: attributeFilter} = target.constructor;\n    if (attributeFilter) {\n      whenDefined(is).then(() => {\n        new MutationObserver(attributeChanged).observe(target, {\n          attributes: true,\n          attributeOldValue: true,\n          attributeFilter\n        });\n        for (let i = 0, {length} = attributeFilter; i < length; i++) {\n          if (target.hasAttribute(attributeFilter[i]))\n            dispatch({target, attributeName: attributeFilter[i], oldValue: null});\n        }\n      });\n    }\n    return target;\n  };\n};\n", "const {keys} = Object;\n\nexport const expando = element => {\n  const key = keys(element);\n  const value = [];\n  const {length} = key;\n  for (let i = 0; i < length; i++) {\n    value[i] = element[key[i]];\n    delete element[key[i]];\n  }\n  return () => {\n    for (let i = 0; i < length; i++)\n      element[key[i]] = value[i];\n  };\n};\n\nexport const attributes = element => {\n  const {attributeChangedCallback, constructor} = element;\n  if (attributeChangedCallback) {\n    const {observedAttributes} = constructor;\n    if (observedAttributes) {\n      const {length} = observedAttributes;\n      for (let i = 0; i < length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value != null)\n          attributeChangedCallback.call(element, name, null, value);\n      }\n    }\n  }\n};\n", "/*! (c) Andrea Giammarchi - ISC */\nconst TRUE = true, FALSE = false, QSA = 'querySelectorAll';\n\n/**\n * Start observing a generic document or root element.\n * @param {(node:Element, connected:boolean) => void} callback triggered per each dis/connected element\n * @param {Document|Element} [root=document] by default, the global document to observe\n * @param {Function} [MO=MutationObserver] by default, the global MutationObserver\n * @param {string[]} [query=['*']] the selectors to use within nodes\n * @returns {MutationObserver}\n */\nexport const notify = (callback, root = document, MO = MutationObserver, query = ['*']) => {\n  const loop = (nodes, selectors, added, removed, connected, pass) => {\n    for (const node of nodes) {\n      if (pass || (QSA in node)) {\n        if (connected) {\n          if (!added.has(node)) {\n            added.add(node);\n            removed.delete(node);\n            callback(node, connected);\n          }\n        }\n        else if (!removed.has(node)) {\n          removed.add(node);\n          added.delete(node);\n          callback(node, connected);\n        }\n        if (!pass)\n          loop(node[QSA](selectors), selectors, added, removed, connected, TRUE);\n      }\n    }\n  };\n\n  const mo = new MO(records => {\n    if (query.length) {\n      const selectors = query.join(',');\n      const added = new Set, removed = new Set;\n      for (const {addedNodes, removedNodes} of records) {\n        loop(removedNodes, selectors, added, removed, FALSE, FALSE);\n        loop(addedNodes, selectors, added, removed, TRUE, FALSE);\n      }\n    }\n  });\n\n  const {observe} = mo;\n  (mo.observe = node => observe.call(mo, node, {subtree: TRUE, childList: TRUE}))(root);\n\n  return mo;\n};\n", "import {notify} from 'element-notifier';\n\nconst QSA = 'querySelectorAll';\n\nconst {document, Element, MutationObserver, Set, WeakMap} = self;\n\nconst elements = element => QSA in element;\nconst {filter} = [];\n\nexport default options => {\n  const live = new WeakMap;\n  const drop = elements => {\n    for (let i = 0, {length} = elements; i < length; i++)\n      live.delete(elements[i]);\n  };\n  const flush = () => {\n    const records = observer.takeRecords();\n    for (let i = 0, {length} = records; i < length; i++) {\n      parse(filter.call(records[i].removedNodes, elements), false);\n      parse(filter.call(records[i].addedNodes, elements), true);\n    }\n  };\n  const matches = element => (\n    element.matches ||\n    element.webkitMatchesSelector ||\n    element.msMatchesSelector\n  );\n  const notifier = (element, connected) => {\n    let selectors;\n    if (connected) {\n      for (let q, m = matches(element), i = 0, {length} = query; i < length; i++) {\n        if (m.call(element, q = query[i])) {\n          if (!live.has(element))\n            live.set(element, new Set);\n          selectors = live.get(element);\n          if (!selectors.has(q)) {\n            selectors.add(q);\n            options.handle(element, connected, q);\n          }\n        }\n      }\n    }\n    else if (live.has(element)) {\n      selectors = live.get(element);\n      live.delete(element);\n      selectors.forEach(q => {\n        options.handle(element, connected, q);\n      });\n    }\n  };\n  const parse = (elements, connected = true) => {\n    for (let i = 0, {length} = elements; i < length; i++)\n      notifier(elements[i], connected);\n  };\n  const {query} = options;\n  const root = options.root || document;\n  const observer = notify(notifier, root, MutationObserver, query);\n  const {attachShadow} = Element.prototype;\n  if (attachShadow)\n    Element.prototype.attachShadow = function (init) {\n      const shadowRoot = attachShadow.call(this, init);\n      observer.observe(shadowRoot);\n      return shadowRoot;\n    };\n  if (query.length)\n    parse(root[QSA](query));\n  return {drop, flush, observer, parse};\n};\n", "import attributesObserver from '@webreflection/custom-elements-attributes';\nimport {expando} from '@webreflection/custom-elements-upgrade';\nimport qsaObserver from 'qsa-observer';\n\nconst {\n  customElements, document,\n  Element, MutationObserver, Object, Promise,\n  Map, Set, WeakMap, Reflect\n} = self;\n\nconst {createElement} = document;\nconst {define, get, upgrade} = customElements;\nconst {construct} = Reflect || {construct(HTMLElement) {\n  return HTMLElement.call(this);\n}};\n\nconst {defineProperty, getOwnPropertyNames, setPrototypeOf} = Object;\n\nconst shadowRoots = new WeakMap;\nconst shadows = new Set;\n\nconst classes = new Map;\nconst defined = new Map;\nconst prototypes = new Map;\nconst registry = new Map;\n\nconst shadowed = [];\nconst query = [];\n\nconst getCE = is => registry.get(is) || get.call(customElements, is);\n\nconst handle = (element, connected, selector) => {\n  const proto = prototypes.get(selector);\n  if (connected && !proto.isPrototypeOf(element)) {\n    const redefine = expando(element);\n    override = setPrototypeOf(element, proto);\n    try { new proto.constructor; }\n    finally {\n      override = null;\n      redefine();\n    }\n  }\n  const method = `${connected ? '' : 'dis'}connectedCallback`;\n  if (method in proto)\n    element[method]();\n};\n\nconst {parse} = qsaObserver({query, handle});\n\nconst {parse: parseShadowed} = qsaObserver({\n  query: shadowed,\n  handle(element, connected) {\n    if (shadowRoots.has(element)) {\n      if (connected)\n        shadows.add(element);\n      else\n        shadows.delete(element);\n      if (query.length)\n        parseShadow.call(query, element);\n    }\n  }\n});\n\n// qsaObserver also patches attachShadow\n// be sure this runs *after* that\nconst {attachShadow} = Element.prototype;\nif (attachShadow)\n  Element.prototype.attachShadow = function (init) {\n    const root = attachShadow.call(this, init);\n    shadowRoots.set(this, root);\n    return root;\n  };\n\nconst whenDefined = name => {\n  if (!defined.has(name)) {\n    let _, $ = new Promise($ => { _ = $; });\n    defined.set(name, {$, _});\n  }\n  return defined.get(name).$;\n};\n\nconst augment = attributesObserver(whenDefined, MutationObserver);\n\nlet override = null;\n\ngetOwnPropertyNames(self)\n  .filter(k => /^HTML.*Element$/.test(k))\n  .forEach(k => {\n    const HTMLElement = self[k];\n    function HTMLBuiltIn() {\n      const {constructor} = this;\n      if (!classes.has(constructor))\n        throw new TypeError('Illegal constructor');\n      const {is, tag} = classes.get(constructor);\n      if (is) {\n        if (override)\n          return augment(override, is);\n        const element = createElement.call(document, tag);\n        element.setAttribute('is', is);\n        return augment(setPrototypeOf(element, constructor.prototype), is);\n      }\n      else\n        return construct.call(this, HTMLElement, [], constructor);\n    }\n    setPrototypeOf(HTMLBuiltIn, HTMLElement);\n    defineProperty(\n      HTMLBuiltIn.prototype = HTMLElement.prototype,\n      'constructor',\n      {value: HTMLBuiltIn}\n    );\n    defineProperty(self, k, {value: HTMLBuiltIn});\n  });\n\ndefineProperty(document, 'createElement', {\n  configurable: true,\n  value(name, options) {\n    const is = options && options.is;\n    if (is) {\n      const Class = registry.get(is);\n      if (Class && classes.get(Class).tag === name)\n        return new Class;\n    }\n    const element = createElement.call(document, name);\n    if (is)\n      element.setAttribute('is', is);\n    return element;\n  }\n});\n\ndefineProperty(customElements, 'get', {\n  configurable: true,\n  value: getCE\n});\n\ndefineProperty(customElements, 'whenDefined', {\n  configurable: true,\n  value: whenDefined\n});\n\ndefineProperty(customElements, 'upgrade', {\n  configurable: true,\n  value(element) {\n    const is = element.getAttribute('is');\n    if (is) {\n      const constructor = registry.get(is);\n      if (constructor) {\n        augment(setPrototypeOf(element, constructor.prototype), is);\n        // apparently unnecessary because this is handled by qsa observer\n        // if (element.isConnected && element.connectedCallback)\n        //   element.connectedCallback();\n        return;\n      }\n    }\n    upgrade.call(customElements, element);\n  }\n});\n\ndefineProperty(customElements, 'define', {\n  configurable: true,\n  value(is, Class, options) {\n    if (getCE(is))\n      throw new Error(`'${is}' has already been defined as a custom element`);\n    let selector;\n    const tag = options && options.extends;\n    classes.set(Class, tag ? {is, tag} : {is: '', tag: is});\n    if (tag) {\n      selector = `${tag}[is=\"${is}\"]`;\n      prototypes.set(selector, Class.prototype);\n      registry.set(is, Class);\n      query.push(selector);\n    }\n    else {\n      define.apply(customElements, arguments);\n      shadowed.push(selector = is);\n    }\n    whenDefined(is).then(() => {\n      if (tag) {\n        parse(document.querySelectorAll(selector));\n        shadows.forEach(parseShadow, [selector]);\n      }\n      else\n        parseShadowed(document.querySelectorAll(selector));\n    });\n    defined.get(is)._(Class);\n  }\n});\n\nfunction parseShadow(element) {\n  const root = shadowRoots.get(element);\n  parse(root.querySelectorAll(this), element.isConnected);\n}\n"],
  "mappings": "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",
  "names": ["whenDefined", "MutationObserver", "query", "QSA", "document", "MutationObserver", "Set", "esm_default", "elements", "parse", "query", "attachShadow", "document", "Element", "MutationObserver", "Object", "Promise", "Set", "WeakMap", "esm_default", "$"]
}
