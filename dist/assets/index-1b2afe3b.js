const G=(t,o)=>{const n=e=>{for(let a=0,{length:i}=e;a<i;a++)r(e[a])},r=({target:e,attributeName:a,oldValue:i})=>{e.attributeChangedCallback(a,i,e.getAttribute(a))};return(e,a)=>{const{observedAttributes:i}=e.constructor;return i&&t(a).then(()=>{new o(n).observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:i});for(let u=0,{length:h}=i;u<h;u++)e.hasAttribute(i[u])&&r({target:e,attributeName:i[u],oldValue:null})}),e}},{keys:J}=Object,K=t=>{const o=J(t),n=[],{length:r}=o;for(let e=0;e<r;e++)n[e]=t[o[e]],delete t[o[e]];return()=>{for(let e=0;e<r;e++)t[o[e]]=n[e]}};/*! (c) Andrea Giammarchi - ISC */const y=!0,k=!1,T="querySelectorAll",X=(t,o=document,n=MutationObserver,r=["*"])=>{const e=(u,h,f,d,s,l)=>{for(const c of u)(l||T in c)&&(s?f.has(c)||(f.add(c),d.delete(c),t(c,s)):d.has(c)||(d.add(c),f.delete(c),t(c,s)),l||e(c[T](h),h,f,d,s,y))},a=new n(u=>{if(r.length){const h=r.join(","),f=new Set,d=new Set;for(const{addedNodes:s,removedNodes:l}of u)e(l,h,f,d,k,k),e(s,h,f,d,y,k)}}),{observe:i}=a;return(a.observe=u=>i.call(a,u,{subtree:y,childList:y}))(o),a},m="querySelectorAll",{document:Y,Element:j,MutationObserver:Z,Set:tt,WeakMap:et}=self,C=t=>m in t,{filter:H}=[],x=t=>{const o=new et,n=s=>{for(let l=0,{length:c}=s;l<c;l++)o.delete(s[l])},r=()=>{const s=f.takeRecords();for(let l=0,{length:c}=s;l<c;l++)i(H.call(s[l].removedNodes,C),!1),i(H.call(s[l].addedNodes,C),!0)},e=s=>s.matches||s.webkitMatchesSelector||s.msMatchesSelector,a=(s,l)=>{let c;if(l)for(let g,U=e(s),q=0,{length:z}=u;q<z;q++)U.call(s,g=u[q])&&(o.has(s)||o.set(s,new tt),c=o.get(s),c.has(g)||(c.add(g),t.handle(s,l,g)));else o.has(s)&&(c=o.get(s),o.delete(s),c.forEach(g=>{t.handle(s,l,g)}))},i=(s,l=!0)=>{for(let c=0,{length:g}=s;c<g;c++)a(s[c],l)},{query:u}=t,h=t.root||Y,f=X(a,h,Z,u),{attachShadow:d}=j.prototype;return d&&(j.prototype.attachShadow=function(s){const l=d.call(this,s);return f.observe(l),l}),u.length&&i(h[m](u)),{drop:n,flush:r,observer:f,parse:i}},{customElements:p,document:w,Element:D,MutationObserver:ot,Object:rt,Promise:st,Map:M,Set:nt,WeakMap:ct,Reflect:lt}=self,{createElement:F}=w,{define:at,get:it,upgrade:ut}=p,{construct:ft}=lt||{construct(t){return t.call(this)}},{defineProperty:b,getOwnPropertyNames:ht,setPrototypeOf:S}=rt,N=new ct,P=new nt,$=new M,v=new M,I=new M,O=new M,Q=[],E=[],V=t=>O.get(t)||it.call(p,t),dt=(t,o,n)=>{const r=I.get(n);if(o&&!r.isPrototypeOf(t)){const a=K(t);A=S(t,r);try{new r.constructor}finally{A=null,a()}}const e=`${o?"":"dis"}connectedCallback`;e in r&&t[e]()},{parse:_}=x({query:E,handle:dt}),{parse:gt}=x({query:Q,handle(t,o){N.has(t)&&(o?P.add(t):P.delete(t),E.length&&B.call(E,t))}}),{attachShadow:W}=D.prototype;W&&(D.prototype.attachShadow=function(t){const o=W.call(this,t);return N.set(this,o),o});const R=t=>{if(!v.has(t)){let o,n=new st(r=>{o=r});v.set(t,{$:n,_:o})}return v.get(t).$},L=G(R,ot);let A=null;ht(self).filter(t=>/^HTML.*Element$/.test(t)).forEach(t=>{const o=self[t];function n(){const{constructor:r}=this;if(!$.has(r))throw new TypeError("Illegal constructor");const{is:e,tag:a}=$.get(r);if(e){if(A)return L(A,e);const i=F.call(w,a);return i.setAttribute("is",e),L(S(i,r.prototype),e)}else return ft.call(this,o,[],r)}S(n,o),b(n.prototype=o.prototype,"constructor",{value:n}),b(self,t,{value:n})});b(w,"createElement",{configurable:!0,value(t,o){const n=o&&o.is;if(n){const e=O.get(n);if(e&&$.get(e).tag===t)return new e}const r=F.call(w,t);return n&&r.setAttribute("is",n),r}});b(p,"get",{configurable:!0,value:V});b(p,"whenDefined",{configurable:!0,value:R});b(p,"upgrade",{configurable:!0,value(t){const o=t.getAttribute("is");if(o){const n=O.get(o);if(n){L(S(t,n.prototype),o);return}}ut.call(p,t)}});b(p,"define",{configurable:!0,value(t,o,n){if(V(t))throw new Error(`'${t}' has already been defined as a custom element`);let r;const e=n&&n.extends;$.set(o,e?{is:t,tag:e}:{is:"",tag:t}),e?(r=`${e}[is="${t}"]`,I.set(r,o.prototype),O.set(t,o),E.push(r)):(at.apply(p,arguments),Q.push(r=t)),R(t).then(()=>{e?(_(w.querySelectorAll(r)),P.forEach(B,[r])):gt(w.querySelectorAll(r))}),v.get(t)._(o)}});function B(t){const o=N.get(t);_(o.querySelectorAll(this),t.isConnected)}
